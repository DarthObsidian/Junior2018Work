global proc ColorControls(string $ctrlName, int $color)
{
    string $shapes[] = `listRelatives -shapes $ctrlName`;

    for($shape in $shapes)
    {
        if(`nodeType $shape` == "nurbsCurve")
        {
            setAttr ($shape + ".overrideEnabled") 1;
            setAttr ($shape + ".overrideColor") $color;
        }
        else
        {
            warning("Selected object is not a curve");
        }
    }
}

global proc string CreateCtrlShape(string $shape)
{
    string $ctrl[];
    
    if($shape == "circle")
    {
        $ctrl = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`; 
    }
    else if($shape == "flower")
    {
        $ctrl[0] = `curve -d 3 -p -0.3 0 0.3 -p 0 0 -1.2 -p 0.3 0 0.3 -p -1.2 0 0 -p 0.3 0 -0.3 -p 0 0 1.2 -p -0.3 0 -0.3 -p 1.2 0 0 -k -2 -k -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7`;
        closeCurve -ch 1 -ps 0 -rpo 1 -bb 0.5 -bki 1 -p 0 $ctrl[0];
    }
    else if($shape == "square")
    {
        $ctrl[0] = `curve -d 1 -p 1 0 -1 -p -1 0 -1 -p -1 0 1 -p 1 0 1 -k 0 -k 1 -k 2 -k 3`;
        closeCurve -ch 1 -ps 1 -rpo 1 -bb 0.5 -bki 0 -p 0.1 $ctrl[0];
    }
    else if($shape == "diamond")
    {
        $ctrl[0] = `curve -d 3 -p 0.2 0 -0.2 -p 0 0 -1.2 -p -0.2 0 -0.2 -p -1.2 0 0 -p -0.2 0 0.2 -p 0 0 1.2 -p 0.2 0 0.2 -p 1.2 0 0 -k -2 -k -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7`;
        closeCurve -ch 1 -ps 0 -rpo 1 -bb 0.5 -bki 1 -p 0 $ctrl[0];
    }
    else
    {
        warning("Invalid shape");
    }
    objectMoveCommand;
    return $ctrl[0];
}

global proc Constrain(string $constrainer, string $constrainee, int $doConstraint, int $scale, int $separate)
{
    if($doConstraint)
    {
        select -r $constrainer;
        select -tgl $constrainee;
        if($scale)
        {
            scaleConstraint -offset 1 1 1 -weight 1;
        }
        if($separate)
        {
            parentConstraint -mo -skipRotate x -skipRotate y -skipRotate z -weight 1;
            parentConstraint -mo -skipTranslate x -skipTranslate y -skipTranslate z -weight 1;
        }
        else
        {
            parentConstraint -mo -weight 1;
        }
    }
}

global proc CreateControl(int $ctrlColor, string $shape, int $doConstraint, int $scale, int $separate)
{
    string $sels[] = `ls -sl`;
    
    if(size($sels) > 0)
    {
        for($selection in $sels)
        {
            string $ctrl = CreateCtrlShape($shape);
            ColorControls($ctrl, $ctrlColor);
            
            string $obj = `rename $ctrl ($selection + "_Ctrl")`;
            string $grp = `group -world -name ($obj + "_Grp") $obj`;
            
            matchTransform $grp $selection;
            Constrain($obj, $selection, $doConstraint, $scale, $separate);
        }
    }
    else
    {
        string $ctrl = CreateCtrlShape($shape);
        ColorControls($ctrl, $ctrlColor);
        
        string $obj = `rename $ctrl "ctrl"`;
        group -world -name ($obj + "_Grp") $obj;        
    }
    select -cl;
}