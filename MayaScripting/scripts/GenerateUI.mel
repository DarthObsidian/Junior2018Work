source DupeAndMove;
source Controls;
source Rename;
source GetUIInfo;

proc GetDupeMove(string $numDupeName, string $minFloatName, string $maxFloatName)
{
    int $duplicates[] = GetIntGrpValue($numDupeName);
    vector $min = GetFloatGrpValue($minFloatName);
    vector $max = GetFloatGrpValue($maxFloatName);
    DupeAndMove($duplicates[0], $min, $max);
}

global proc DupeAndMoveUI()
{   
    string $mainWindow = "RandomPlacementWindow";
    if(`window -exists $mainWindow`)
    {
        deleteUI $mainWindow;
    }

    $mainWindow = `window -title "Random Placement Generator" $mainWindow`;
        string $mainColumn = `columnLayout -adjustableColumn true -columnAttach "both" 50 -height 125 -rowSpacing 5`;
            string $myIntGrp = `intFieldGrp -columnWidth2 98 75 -label "Num Duplicates: " -parent $mainColumn`;
            string $minFloatGrp = `floatFieldGrp -columnWidth4 75 75 75 75 -label "Min Range: " -numberOfFields 3 -parent $mainColumn`;
            string $maxFloatGrp = `floatFieldGrp -columnWidth4 75 75 75 75 -label "Max Range: " -numberOfFields 3 -parent $mainColumn`;
            string $myButton = `button -command 
            ("GetDupeMove(\"" + $myIntGrp + "\", \"" + $minFloatGrp + "\", \"" + $maxFloatGrp + "\")") 
            -label "Generate" -parent $mainColumn`;
    showWindow $mainWindow;
}

proc GetRename(string $prefixName, string $objectName, string $paddingName, string $suffixName)
{
    string $prefix = GetOptionMenuValue($prefixName);
    string $name = GetTextGrpValue($objectName);
    string $padding = GetOptionMenuValue($paddingName);
    string $suffix = GetOptionMenuValue($suffixName);
    RenameSelection($prefix, $name, $padding, $suffix);
}

global proc RenameUI()
{
    string $window = "RenameWindow";
    if(`window -exists $window`)
    {
        deleteUI $window;
    }
    $window = `window -height 150 -title "Rename Objects" -width 300 $window`;
        string $mainLayout = `columnLayout -adjustableColumn true -height 150 -parent $window -rowSpacing 10`;
            string $column = `columnLayout -adjustableColumn true -columnAttach "both" 25 -parent $mainLayout -rowSpacing 5`;
                string $textGrp = `textFieldGrp -adjustableColumn true -columnAlign 1 "left" -columnWidth 2 100 -label "Name: " -parent $column`;
                string $oMenuPrefix = `optionMenu -label "Prefix" -parent $column -width 100`;
                    menuItem -label "R";
                    menuItem -label "L";
                    menuItem -label "none";
                string $oMenuSuffix = `optionMenu -label "Suffix" -parent $column -width 100`;
                    menuItem -label "Geo";
                    menuItem -label "Jnt";
                    menuItem -label "Ctrl";
                    menuItem -label "Grp";
                    menuItem -label "Ctrl_Grp";
                    menuItem -label "Loc";
                    menuItem -label "none";
                string $oMenuPadding = `optionMenu -label "Padding" -parent $column -width 100`;
                    menuItem -label "#";
                    menuItem -label "##";
                    menuItem -label "none";
            string $row1 = `rowLayout -adjustableColumn true -parent $mainLayout`;
                string $row2 = `rowLayout -adjustableColumn true -columnAttach1 "both" -columnOffset1 100 -parent $row1`;
                string $button = `button -height 25 -label "Rename" -command 
                ("GetRename(\"" + $oMenuPrefix + "\", \"" + $textGrp + "\", \"" + $oMenuPadding + "\", \"" + $oMenuSuffix + "\")") 
                -parent $row2 -width 100`;
    showWindow $window;
}

proc GetControlInfo(string $colorName, string $shapeName, string $constraintName, string $scaleName, string $separateName)
{
    int $ctrlColor = GetColorIndexSliderGrpValue($colorName);
    string $shape = GetOptionMenuValue($shapeName);
    int $doConstraint = GetCheckBoxValue($constraintName);
    int $scale = GetCheckBoxValue($scaleName);
    int $separate = GetCheckBoxValue($separateName);

    CreateControl($ctrlColor, $shape, $doConstraint, $scale, $separate);
}

proc Enable(string $doConstrain, string $scale, string $separate)
{
    if(!`checkBox -query -v $doConstrain`)
    {    
        checkBox -e -enable false -visible false $scale;
        checkBox -e -enable false -visible false $separate;
    }
    else
    {
        checkBox -e -enable true -visible true $scale;
        checkBox -e -enable true -visible true $separate;
    }
}

global proc CreateControlsUI()
{
    string $window = "ControlsWindow";
    if(`window -exists $window`)
    {
        deleteUI $window;
    }
    $window = `window -height 175 -title "Create Controls" -width 350 $window`;
        string $mainLayout = `columnLayout -adjustableColumn true -height 175 -rowSpacing 10`;
            string $column = `columnLayout -adjustableColumn true -columnAttach "both" 25 -parent $mainLayout -rowSpacing 5`;
                string $oMenuShape = `optionMenu -label "Control Shape" -parent $column -width 100`;
                    menuItem -label "circle";
                    menuItem -label "square";
                    menuItem -label "flower";
                    menuItem -label "diamond";
                string $color = `colorIndexSliderGrp -maxValue 32 -minValue 1 -parent $column`;
                string $scaleBox = "Scale";
                string $separateBox = "Separate";
                string $constrainBox = "Constrain";
                $constrainBox = `checkBox -cc ("Enable(\"" + $constrainBox + "\", \"" + $scaleBox + "\", \"" + $separateBox + "\")") 
                -label "Constrain" -parent $column $constrainBox`;
                string $checkColumn = `columnLayout -adjustableColumn true -columnAttach "both" 50 -parent $column -rowSpacing 5`;
                    $scaleBox = `checkBox -enable false -label "Scale" -parent $checkColumn -visible false $scaleBox`;
                    $separateBox = `checkBox -enable false -label "Separate Translate and Rotate" -parent $checkColumn -visible false $separateBox`;
            string $row = `rowLayout -adjustableColumn true -columnAttach1 "both" -columnOffset1 100 -parent $mainLayout`;
                string $button = `button -height 25 -label "Create Controls"
                -command ("GetControlInfo(\"" + $color + "\", \"" + $oMenuShape + "\", \"" + $constrainBox + "\", \"" + $scaleBox + "\", \"" + $separateBox + "\")")
                -parent $row -width 100`;
    showWindow $window;
}

global proc ToolBox()
{
    string $window = "Matthew's Toolbox";
    if(`window -exists $window`)
    {
        deleteUI $window;
    }
    $window = `window -height 50 -title "Matthew's Toolbox" -width 275 $window`;
        string $mainLayout = `columnLayout -adjustableColumn true -height 100 -rowSpacing 10 -width 275`;
            string $column = `columnLayout -adjustableColumn true -columnAttach "both" 25 -parent $mainLayout -rowSpacing 5`;
                button -command "RenameUI" -height 25 -label "Rename" -parent $column;
                button -command "CreateControlsUI" -height 25 -label "Controls" -parent $column;
                button -command "DupeAndMoveUI" -height 25 -label "DupeAndMove" -parent $column;
    showWindow $window;
}

ToolBox();