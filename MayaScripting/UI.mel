global proc vector GetFloatGrpValue(string $floatGrpName)
{
    vector $value = `floatFieldGrp -q -v $floatGrpName`;
    return $value;
}

global proc int[] GetIntGrpValue(string $intGrpName)
{
    int $value[] = `intFieldGrp -q -v $intGrpName`;
    return $value;
}

global proc string GetOptionMenuValue(string $optionMnuName)
{
    string $value = `optionMenu -q -v $optionMnuName`;
    return $value;
}

global proc int GetCheckBoxValue(string $checkBoxName)
{
    int $value = `checkBox -q -v $checkBoxName`;
    return $value;
}

global proc string GetTextGrpValue(string $textGrpName)
{
    string $value = `textFieldGrp -q -text $textGrpName`;
    return $value;
}

global proc GetDupeMove(string $numDupeName, string $minFloatName, string $maxFloatName)
{
    int[] $duplicates = GetIntGrpValue($numDupeName);
    vector $min = GetFloatGrpValue($minFloatName);
    vector $max = GetFloatGrpValue($maxFloatName);
    print($duplicates[0] + " " + $min + " " + $max);
}

global proc GenerateUI()
{   
    string $mainWindow = "RandomPlacementWindow";
    if(`window -exists $mainWindow`)
    {
        deleteUI $mainWindow;
    }

    $mainWindow = `window -title "Random Placement Generator" $mainWindow`;
        string $mainColumn = `columnLayout -adjustableColumn true -columnAttach "both" 50 -height 125 -rowSpacing 5`;
            string $myIntGrp = `intFieldGrp -columnWidth2 98 75 -label "Num Duplicates: " -parent $mainColumn`;
            string $minFloatGrp = `floatFieldGrp -columnWidth4 75 75 75 75 -label "Min Range: " -numberOfFields 3 -parent $mainColumn`;
            string $maxFloatGrp = `floatFieldGrp -columnWidth4 75 75 75 75 -label "Max Range: " -numberOfFields 3 -parent $mainColumn`;
            string $myButton = `button -command ("GetDupeMove(\"" + $myIntGrp + "\", \"" + $minFloatGrp + "\", \"" + $maxFloatGrp + "\")") -label "Generate" -parent $mainColumn`;
    showWindow $mainWindow;
}

global proc RenameUI()
{
    string $window = "RenameWindow";
    if(`window -exists $window`)
    {
        deleteUI $window;
    }
    $window = `window -height 150 -title "Rename Objects" -width 300 $window`;
        string $mainLayout = `columnLayout -adjustableColumn true -height 150 -parent $window -rowSpacing 10`;
            string $column = `columnLayout -adjustableColumn true -columnAttach "both" 25 -parent $mainLayout -rowSpacing 5`;
                string $textGrp = `textFieldGrp -adjustableColumn true -columnAlign 1 "left" -columnWidth 2 100 -label "Name: " -parent $column`;
                string $oMenuPrefix = `optionMenu -label "Prefix" -parent $column -width 100`;
                    menuItem -label "R";
                    menuItem -label "L";
                    menuItem -label "none";
                string $oMenuSuffix = `optionMenu -label "Suffix" -parent $column -width 100`;
                    menuItem -label "Geo";
                    menuItem -label "Jnt";
                    menuItem -label "Ctrl";
                    menuItem -label "Grp";
                    menuItem -label "Ctrl_Grp";
                    menuItem -label "Loc";
                    menuItem -label "none";
                string $oMenuPadding = `optionMenu -label "Padding" -parent $column -width 100`;
                    menuItem -label "#";
                    menuItem -label "##";
                    menuItem -label "none";
            string $row1 = `rowLayout -adjustableColumn true -parent $mainLayout`;
                string $row2 = `rowLayout -adjustableColumn true -columnAttach1 "both" -columnOffset1 100 -parent $row1`;
                string $button = `button -height 25 -label "Rename" -parent $row2 -width 100`;
    showWindow $window;
}

proc Enable(string $doConstrain, string $scale, string $separate)
{
    if(!`checkBox -query -v $doConstrain`)
    {    
        checkBox -e -enable false -visible false $scale;
        checkBox -e -enable false -visible false $separate;
    }
    else
    {
        checkBox -e -enable true -visible true $scale;
        checkBox -e -enable true -visible true $separate;
    }
}

global proc CreateControlsUI()
{
    string $window = "ControlsWindow";
    if(`window -exists $window`)
    {
        deleteUI $window;
    }
    $window = `window -height 175 -title "Create Controls" -width 350 $window`;
        string $mainLayout = `columnLayout -adjustableColumn true -height 175 -rowSpacing 10`;
            string $column = `columnLayout -adjustableColumn true -columnAttach "both" 25 -parent $mainLayout -rowSpacing 5`;
                string $oMenuShape = `optionMenu -label "Control Shape" -parent $column -width 100`;
                    menuItem -label "circle";
                    menuItem -label "square";
                    menuItem -label "flower";
                    menuItem -label "diamond";
                string $color = `colorIndexSliderGrp -maxValue 32 -minValue 1 -parent $column`;
                string $scaleBox = "Scale";
                string $separateBox = "Separate";
                string $constrainBox = "Constrain";
                $constrainBox = `checkBox -cc ("Enable(\"" + $constrainBox + "\", \"" + $scaleBox + "\", \"" + $separateBox + "\")") -label "Constrain" -parent $column $constrainBox`;//problem here
                string $checkColumn = `columnLayout -adjustableColumn true -columnAttach "both" 50 -parent $column -rowSpacing 5`;
                    $scaleBox = `checkBox -enable false -label "Scale" -parent $checkColumn -visible false $scaleBox`;
                    $separateBox = `checkBox -enable false -label "Separate Translate and Rotate" -parent $checkColumn -visible false $separateBox`;
            string $row = `rowLayout -adjustableColumn true -columnAttach1 "both" -columnOffset1 100 -parent $mainLayout`;
                string $button = `button -height 25 -label "Create" -parent $row -width 100`;
    showWindow $window;
}

CreateControlsUI();