global proc ColorControls(string $ctrlName, int $color)
{
    string $shapes[] = `listRelatives -shapes $ctrlName`;
    for($shape in $shapes)
    {
        if(`nodeType $shape` == "nurbsCurve")
        {
            setAttr ($shape + ".overrideEnabled") 1;
            setAttr ($shape + ".overrideColor") $color;
        }
        else
        {
            warning("Selected object is not a curve");
        }
    }
}

global proc string CreateCtrlShape(string $shape)
{
    string $ctrl[] = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`;
    objectMoveCommand;
    if($shape == "circle"){}
    else if($shape == "flower")
    {
        select -r ($ctrl[0] + ".cv[0]");
        select -tgl ($ctrl[0] + ".cv[2]");
        select -tgl ($ctrl[0] + ".cv[4]");
        select -tgl ($ctrl[0] + ".cv[6]");
        scale -r -p 0cm 0cm 0cm -0.35 -0.35 -0.35;
    }
    else if($shape == "square")
    {
        select -r ($ctrl[0] + ".cv[0]");
        select -tgl ($ctrl[0] + ".cv[2]");
        select -tgl ($ctrl[0] + ".cv[4]");
        select -tgl ($ctrl[0] + ".cv[6]");
        scale -r -p 0cm 0cm 0cm 1.5 1.5 1.5;
    }
    else if($shape == "diamond")
    {
        select -r ($ctrl[0] + ".cv[0]");
        select -tgl ($ctrl[0] + ".cv[2]");
        select -tgl ($ctrl[0] + ".cv[4]");
        select -tgl ($ctrl[0] + ".cv[6]");
        scale -r -p 0cm 0cm 0cm 0.3 0.3 0.3;        
    }
    else
    {
        warning("Invalid shape, defaulting to circle");
    }
    return $ctrl[0];
}

global proc CreateControl(int $ctrlColor, string $shape)
{
    string $sels[] = `ls -sl`;
    
    if(size($sels) > 0)
    {
        for($selection in $sels)
        {
            string $ctrl = CreateCtrlShape($shape);
            string $newName = $selection + "_Ctrl";
            string $obj = `rename $ctrl $newName`;
            vector $pos = `xform -query -ws -absolute -translation $selection`;
            vector $rot = `xform -query -ws -absolute -rotation $selection`;
            xform -translation ($pos.x) ($pos.y) ($pos.z) -ws -a $obj;
            xform -rotation ($rot.x) ($rot.y) ($rot.z) -ws -a $obj;
            
            ColorControls($obj, $ctrlColor);
        }
    }
    else
    {
        string $ctrl = CreateCtrlShape($shape);
        string $obj = `rename $ctrl "ctrl"`;
        ColorControls($obj, $ctrlColor);
    }
    select -cl;
}

proc Start()
{
    string $shape = `optionMenu -query -v Shape`;
    int $index = `colorIndexSliderGrp -query -v Color` - 1;
    CreateControl($index, $shape);
}

{
    window -width 300 -height 100 -title "Create Controls";
        columnLayout -adjustableColumn true -rowSpacing 10 -height 100;
            columnLayout -adjustableColumn true -columnAttach "both" 25 -rowSpacing 5;
                optionMenu -width 100 -label "Control Shape" Shape;
                    menuItem -label "circle";
                    menuItem -label "square";
                    menuItem -label "flower";
                    menuItem -label "diamond";
                colorIndexSliderGrp -maxValue 32 -minValue 1 Color;
            setParent..;
            rowLayout -adjustableColumn true;
                rowLayout -adjustableColumn true -columnAttach1 "both" -columnOffset1 100;
                button -width 100 -height 25 -label "Create" -command "Start";
    showWindow;   
}